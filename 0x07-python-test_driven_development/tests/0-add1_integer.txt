>>> add_integer = __import__('0-d').add_integer

Testing the correct input:

>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98

Testing the documentaion length:

>>> len1 = __import__("0-add_integer").__doc__
>>> len2 = __import__("0-add_integer").add_integer.__doc__
>>> len(len1)
72
>>> len(len2)
24
>>> len(len2) > 1
True
>>> len(len1) > 1
True

Testing the incorrect input: 

>>> print(add_integer(1, 2, 4))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> print(add_integer())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer("all", "all")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/macbook/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> 
